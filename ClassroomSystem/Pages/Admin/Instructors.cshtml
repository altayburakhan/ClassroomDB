@page
@model ClassroomSystem.Pages.Admin.InstructorsModel
@{
    ViewData["Title"] = "Instructor Management";
    Layout = "_AdminLayout";
}

<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h4 class="mb-0">Instructor Management</h4>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item"><a href="/Admin">Admin</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Instructors</li>
                    </ol>
                </nav>
            </div>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addInstructorModal">
                <i class="mdi mdi-plus"></i> Add New Instructor
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        @if (!ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-centered table-nowrap table-hover mb-0">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Department</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Instructors != null && Model.Instructors.Any())
                            {
                                @foreach (var instructor in Model.Instructors)
                                {
                                    <tr>
                                        <td>@instructor.Id</td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-sm rounded bg-primary bg-opacity-10 me-2">
                                                    <span class="avatar-title rounded">
                                                        <i class="mdi mdi-account font-20 text-primary"></i>
                                                    </span>
                                                </div>
                                                <div>
                                                    <h5 class="mb-0">@instructor.FirstName @instructor.LastName</h5>
                                                    <small class="text-muted">@instructor.Title</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@instructor.Email</td>
                                        <td>@instructor.Department</td>
                                        <td>
                                            <span class="badge bg-@(instructor.IsActive ? "success" : "danger")">
                                                @(instructor.IsActive ? "Active" : "Inactive")
                                            </span>
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-light btn-sm" data-bs-toggle="modal" 
                                                        data-bs-target="#editInstructorModal" data-instructor-id="@instructor.Id">
                                                    <i class="mdi mdi-pencil"></i>
                                                </button>
                                                <button type="button" class="btn btn-light btn-sm" onclick="deleteInstructor(@instructor.Id)">
                                                    <i class="mdi mdi-delete"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Instructor Modal -->
<div class="modal fade" id="addInstructorModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Instructor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-page-handler="AddInstructor">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">First Name</label>
                        <input type="text" class="form-control" name="firstName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Last Name</label>
                        <input type="text" class="form-control" name="lastName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" class="form-control" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Department</label>
                        <input type="text" class="form-control" name="department" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" class="form-control" name="password" required>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" name="isActive" value="true" id="addIsActive">
                            <input type="hidden" name="isActive" value="false" />
                            <label class="form-check-label" for="addIsActive">Active</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Instructor</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Instructor Modal -->
<div class="modal fade" id="editInstructorModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Instructor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-page-handler="UpdateInstructor">
                <input type="hidden" name="id" id="editInstructorId">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">First Name</label>
                        <input type="text" class="form-control" name="firstName" id="editFirstName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Last Name</label>
                        <input type="text" class="form-control" name="lastName" id="editLastName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" name="email" id="editEmail" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" class="form-control" name="title" id="editTitle" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Department</label>
                        <input type="text" class="form-control" name="department" id="editDepartment" required>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" name="isActive" value="true" id="editIsActive">
                            <input type="hidden" name="isActive" value="false" />
                            <label class="form-check-label" for="editIsActive">Active</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle edit instructor modal
        const editInstructorModal = document.getElementById('editInstructorModal');
        editInstructorModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const instructorId = parseInt(button.getAttribute('data-instructor-id'));
            const instructors = @Html.Raw(Json.Serialize(Model.Instructors));
            const instructor = instructors.find(i => i.id === instructorId);
            
            if (instructor) {
                document.getElementById('editInstructorId').value = instructor.id;
                document.getElementById('editFirstName').value = instructor.firstName;
                document.getElementById('editLastName').value = instructor.lastName;
                document.getElementById('editEmail').value = instructor.email;
                document.getElementById('editTitle').value = instructor.title;
                document.getElementById('editDepartment').value = instructor.department;
                document.getElementById('editIsActive').checked = instructor.isActive;
            }
        });

        // Handle delete instructor
        function deleteInstructor(instructorId) {
            if (confirm('Are you sure you want to delete this instructor?')) {
                fetch(`/Admin/Instructors?handler=DeleteInstructor&id=${instructorId}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Failed to delete instructor');
                    }
                });
            }
        }
    </script>
} 